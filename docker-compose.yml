version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: aiagent
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:mysecretpassword@db:5432/aiagent
      # add other env vars via .env for security
      GROQ_API_KEY: ${GROQ_API_KEY}
      GROQ_MODEL: ${GROQ_MODEL}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGSMITH_PROJECT: ${LANGSMITH_PROJECT}
      LANGSMITH_TRACING: "false"
      MAX_ITERATIONS: 5
      CODE_TIMEOUT_SECONDS: 120
      DOCKER_MEMORY_LIMIT: 512m
      DOCKER_CPU_LIMIT: 1
      ENABLE_SECURITY_SCAN: "true"
      ALLOWED_LANGUAGES: python,javascript,java,c,cpp,go
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data         # persists uploads/db data

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    depends_on:
      - backend
    environment:
      API_BASE_URL: http://backend:8000
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app          # optional: allows live UI dev changes

volumes:
  postgres-data:
